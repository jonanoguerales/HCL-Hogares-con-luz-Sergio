---
import type { HTMLAttributes } from 'astro/types';

type Props = HTMLAttributes<'a'>;

const { href, class: className, ...props } = Astro.props;
const pathname = Astro.url.pathname.replace(import.meta.env.BASE_URL, '');
const subpath = pathname.match(/[^\/]+/g);
const isActive = href === pathname || href === '/' + (subpath?.[0] || '');
---

<a
  href={href}
  class:list={[className, { active: isActive }]}
  {...props}
  class="link-base"
>
  <slot />
</a>

<style>
/* Base del enlace */
.link-base {
  display: inline-block;         /* Necesario para pseudo-elementos */
  text-decoration: none;         /* Sin subrayado, lo simulamos nosotros */
  color: #333;                   /* Color por defecto */
  transition: color 0.2s;
}

.link-base:hover {
  color: #FF9800;                /* Hover color naranja */
}

/* Enlace activo */
.link-base.active {
  color: #FF9800;                /* Naranja para el enlace activo */
  font-weight: bold;
  position: relative;            /* Para que ::after se posicione dentro */
}

/* La “sombra” a modo de subrayado */
.link-base.active::after {
  content: "";
  position: absolute;
  left: 0;
  bottom: -4px;                  /* Ajusta si quieres la “sombra” más lejos/cerca */
  width: 100%;
  height: 3px;
  background-color: #FF9800; /* Color y opacidad de la sombra */
  border-radius: 2px;                 /* Suavizar bordes de la franja */
  pointer-events: none;               /* Que no interfiera con el enlace */
}
</style>
